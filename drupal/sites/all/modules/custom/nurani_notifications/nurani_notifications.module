<?php
/**
 * @file
 * Nurani extra custom code , for Notification system.
 */


/**
 * Implementation of hook_menu_alter().
 */
function nurani_notifications_menu_alter(&$items) {
  if (module_exists('notifications_content')) {
    $items['user/%user/notifications'] = array(
      'type' => MENU_LOCAL_TASK,
      'access callback' => 'nurani_notifications_authenticate',
      'access arguments' => array(1),
      'title' => t('Notifications'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('nurani_notifications_user_page', 1),
      'weight' => 10,
    );
  }
  
  // Cleaning the profile page from unwanted tabs.
  $items['user/%user/notifications/overview']['access callback'] = FALSE;
  $items['user/%user/notifications/subscriptions']['access callback'] = FALSE;
  $items['user/%user/notifications/subscriptions/edit/%notifications_subscription']['access callback'] = FALSE;
  $items['user/%user/notifications/subscriptions/delete/%notifications_subscription']['access callback'] = FALSE;
  $items['user/%user/notifications/update/%']['access callback'] = FALSE;
  $items['user/%user/notifications/author']['access callback'] = FALSE;
  $items['user/%user/notifications/nodetype']['access callback'] = FALSE;
  $items['user/%user/notifications/author']['access callback'] = FALSE;
  $items['user/%user/notifications/add']['access callback'] = FALSE;
}

/**
 * Show Notification tab, for none-agreed users only.
 */
function nurani_notifications_authenticate($user) {
  
  $agreed = db_result(db_query("SELECT agreed FROM {agreement} WHERE uid=%d", $user->uid));
  
  return ($agreed == 1);
}

/**
 * Implementation of hook_form_alter().
 */
function nurani_notifications_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'agreement_form') {
    array_unshift($form['#submit'], 'nurani_notifications_subscribe');
  }
}

/**
 * Save auto-sbscribe, for users who only agreed the agreement.
 */
function nurani_notifications_subscribe($form, &$form_state) {
  $agree = $form_state['values']['agree'];
  $uid = $form_state['values']['uid'];
  if ($agree) {
    $types = array('discussion', 'comment', 'term', 'annotation', 'profile');
      
      // @see: http://drupal.org/node/954754
      foreach ($types as $type) {
        $subscription = array(
          'uid' => $uid,
          'type' => 'nodetype',
          'event_type' => 'node',
          'send_method' => 'mail',
          'send_interval' => '0',
          'fields' => array('type' => $type)
        );
        
        $success = notifications_save_subscription($subscription);
        
        if (!$success)
          drupal_set_message(t('Error in subscriptions'), 'error');
      }
      
      // Save variable for checkboxes.
      variable_set('notif_settings_' . $uid, $types);
  }
}

/**
 * Custom user notificatiosn tab.
 */
function nurani_notifications_user_page($form_state, $account) {
  
  //$subscriptions = notifications_get_subscriptions(array('type' => 'nodetype'), NULL, FALSE);
  //$account = user_load($account->uid);
  
  $notif_defaults = variable_get('notif_settings_' . $account->uid, array('discussion', 'comment', 'term', 'annotation', 'profile'));
  
  $form = array();
  
  $options = array(
    'discussion' => t('Invitation to new discussion'),
    'comment' => t('New comment on discussion'),
    'term' => t('New glossary term'),
    'annotation' => t('New annotation on glossary term'),
    'profile' => t('New user')
  );
  
  $form['subscriptions'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Please select the events for which you wish to be notified by email'),
    '#options' => $options,
    '#default_value' => $notif_defaults
  );
  
  $form['account_uid'] = array(
    '#type' => 'value',
    '#value' => $account->uid
  );
  
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save configuration')
  );
  
  return $form;
}


function nurani_notifications_user_page_submit($form, &$form_state) {
  
  $values = &$form_state['values'];
  $types = $values['subscriptions'];
  
  $subs = notifications_get_subscriptions(array('uid' => $values['account_uid'], 'type' => 'nodetype', 'value' => 'comment'));

  // The fastest way is to clear all Subscriptions, and save new selected checkboxes. This way I avoided writing a join SQL query on notifications tables.
  foreach ($subs as $sid => $sub) {
    notifications_delete_subscription($sub->sid);
  }
  
  // Save new Subscriptions:
  foreach ($types as $key => $type) {
    if (!empty($type)) {
      $subscription = array(
        'uid' => $values['account_uid'],
        'type' => 'nodetype',
        'event_type' => 'node',
        'send_method' => 'mail',
        'send_interval' => '0',
        'fields' => array('type' => $type)
      );
      
      $success = notifications_save_subscription($subscription);
      
      if (!$success)
        drupal_set_message(t('Error in subscriptions'), 'error');
    }
  }
  variable_set('notif_settings_' . $values['account_uid'], $values['subscriptions']); 
}

/**
 * Get node types, for subscriptions.
 */
function _nurani_notifications_types() {
  return array('discussion', 'comment', 'term', 'annotation', 'profile');
}
