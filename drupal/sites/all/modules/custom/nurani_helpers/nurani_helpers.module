<?php

/**
 * Implements hook_theme().
 */
function nurani_helpers_theme($existing, $type, $theme, $path) {
  return array(
    'nurani_attribution' => array(
      'variables' => array('author' => NULL, 'timestamp' => NULL),
    ),
    'nurani_helpers_block_welcome_login' => array(
      'variables' => array('author' => NULL),
    ),
  );
}

/**
 * Implements hook_preprocess_page().
 */
function nurani_helpers_preprocess_page(&$variables) {
  // Add spin.js (see: http://fgnass.github.com/spin.js/)
  drupal_add_js(drupal_get_path('theme', 'bowerbird') . '/js/spin.min.js');
  // Add global spin.js settings for this theme
  drupal_add_js(array(
    'spin' => array(
      'lines' => 7, // The number of lines to draw
      'length' => 0, // The length of each line
      'width' => 20, // The line thickness
      'radius' => 0, // The radius of the inner circle
      'corners' => 1, // Corner roundness (0..1)
      'rotate' => 0, // The rotation offset
      'color' => '#fff', // #rgb or #rrggbb
      'speed' => 0.7, // Rounds per second
      'trail' => 56, // Afterglow percentage
      'shadow' => false, // Whether to render a shadow
      'hwaccel' => false, // Whether to use hardware acceleration
      'className' => 'spinner', // The CSS class to assign to the spinner
      'zIndex' => 2e9, // The z-index (defaults to 2000000000)
      'top' => 'auto', // Top position relative to parent in px
      'left' => 'auto' // Left position relative to parent in px
    ),
  ), 'setting');
}

/**
 * Implements hook_block_info().
 */
function nurani_helpers_block_info() {
  $blocks = array();
  $blocks['welcome_login'] = array(
    'info' => t('Nurani login / welcome'),
    'cache' => DRUPAL_NO_CACHE
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function nurani_helpers_block_view($delta = '') {
  global $user;
  $block = array();

  switch ($delta) {
    case 'welcome_login':
      $block['subject'] = NULL;
      $block['content'] = theme('nurani_helpers_block_welcome_login', array('account' => $user));
      break;
  }

  return $block;
}

/**
 * Theme implementation for Nurani 'welcome_login' block.
 */
function theme_nurani_helpers_block_welcome_login($variables) {
  $account = $variables['account'];

  $output = '';
  if (!$account->uid) {
    $output  = '<span class="login">';
    $output .=   l(t("Login"), 'user/login', array('query' => array('destination' => '<front>')));
    $output .= '</span>';
  }
  else {
    $output  = '<span class="welcome">';
    $output .=   t("Welcome, <strong>!name</strong>", array('!name' => l($account->name, '<front>')));
    $output .= '</span>';
    $output .= '<span class="logout">';
    $output .=   l(t("Logout"), 'user/logout', array('query' => array('destination' => '<front>')));
    $output .= '</span>';
  }

  return $output;
}

/**
 * Theme implementation for Nurani attribution helper.
 */
function theme_nurani_attribution($variables) {
  $output  = '';
  $output .= '<span class="attribution">';
  $output .=   theme('username', array('account' => $variables['account']));
  if ($variables['timestamp']) {
    $output .= ' ';
    $output .= format_date($variables['timestamp'], 'medium', '', $variables['account']->timezone);
  }
  $output .= '</span>';
  return $output;
}

/**
 * Implements hook_date_format_types().
 *
 * NOTE: This is in nurani_helpers because date formats are not yet supported by
 *       the features module. see: http://drupal.org/node/1279928#comment-6106170
 */
function nurani_helpers_date_format_types() {
  return array(
    'date_of_birth' => t('Date of birth'),
  );
}

/**
 * Implements hook_date_formats().
 *
 * NOTE: This is in nurani_helpers because date formats are not yet supported by
 *       the features module. see: http://drupal.org/node/1279928#comment-6106170
 */
function nurani_helpers_date_formats() {
  $formats = array();
  $formats[] = array(
    'type' => 'date_of_birth',
    'format' => 'j F, Y',
    'locales' => array(),
  );
  return $formats;
}
