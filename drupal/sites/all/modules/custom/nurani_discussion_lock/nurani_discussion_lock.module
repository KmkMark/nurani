<?php
// $Id$

/**
 * @file
 */


/**
 * Implementation of hook_theme().
 */
function nurani_discussion_lock_theme($existing, $type, $theme, $path) {

  $hooks = array();
  
  $hooks['nurani_discussion_lock_formatter_countdown'] = array(
    'arguments' => array('element' => NULL)
  );
  return $hooks;
}

/**
 * Implementation of hook_field_formatter_info().
 */
function nurani_discussion_lock_field_formatter_info() {

  return array(
    'countdown' => array(
      'label' => t('Countdown'),
      'field types' => array('datestamp'),
      'multiple values' => CONTENT_HANDLE_CORE
    )
  );
}


function theme_nurani_discussion_lock_formatter_countdown($element) {
  
  
  $timestamp = $element['#item']['value'];
  
  $now = time();
  
  if ($now > $timestamp) {
    return t('This discussion is closed.');
  } else {
    return t('<strong>@time</strong> before close of discussion.', array('@time' => format_interval($timestamp - $now, 1)));
  }
  
}

/**
 * Implementation of hook_cron().
 */
function nurani_discussion_lock_cron() {
  
  $current_stamp = time();
  $node_limit = 200;
  
  $result = db_query_range("SELECT nid FROM {content_type_discussion} WHERE field_exp_comments_value < %d", $current_stamp, 0, $node_limit);
  
  while ($record = db_fetch_object($result)) {
    
    $node = node_load($record->nid);
    $node->node_comment = 1; // Read-only.
    node_save($node);
  }
}
